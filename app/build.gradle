buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'android'

repositories {
    maven {
        url 'http://google-api-client-libraries.appspot.com/mavenrepo'
        url 'https://maven.fabric.io/public'
    }
    mavenCentral()
    mavenLocal()
    jcenter()
}


apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

Properties props = new Properties()
props.load(new FileInputStream(file("../config.properties")))

android {
    dexOptions {
        javaMaxHeapSize "3072M"
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileSdkVersion 23
    buildToolsVersion "23.0.1"
    signingConfigs {
        release {
            storeFile file("release.keystore")
            storePassword props['keystore.password']
            keyAlias "donate"
            keyPassword props['keystore.password']
        }
    }
    defaultConfig {
        applicationId "com.github.socialc0de.gsw.android"
        minSdkVersion 16
        targetSdkVersion 21
        versionCode 2
        versionName "BETA"
        ext.betaDistributionGroupAliases="all"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            signingConfig signingConfigs.release
            buildConfigField "String", "CONSUMER_KEY", "\"${props.getProperty("twitterConsumerKey")}\""
            buildConfigField "String", "CONSUMER_SECRET", "\"${props.getProperty("twitterConsumerSecret")}\""
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
            signingConfig signingConfigs.release
            buildConfigField "String", "CONSUMER_KEY", "\"${props.getProperty("twitterConsumerKey")}\""
            buildConfigField "String", "CONSUMER_SECRET", "\"${props.getProperty("twitterConsumerSecret")}\""
        }
    }
    useLibrary 'org.apache.http.legacy'

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:appcompat-v7:22.+'
    compile 'com.android.support:design:22.+'
    compile 'com.melnykov:floatingactionbutton:1.3.0'
    compile 'com.android.support:support-annotations:22.+'
    compile 'com.android.support:cardview-v7:22.+'
    compile 'com.android.support:recyclerview-v7:22.+'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile('com.mikepenz:materialdrawer:4.0.8@aar') {
        transitive = true
    }
    compile 'com.github.androidprogresslayout:library:2.0.2@aar'
    compile 'com.rengwuxian.materialedittext:library:2.1.4'
    compile 'com.github.rey5137:material:1.1.1'
    compile 'com.google.android.gms:play-services:7.0.0'
    compile 'com.wdullaer:materialdatetimepicker:1.4.1'
    // BEGIN Google APIs
    // Play Services will validate the application prior to allowing OAuth2 access.
    compile 'com.google.android.gms:play-services:6.5+'
    // The following lines implement maven imports as defined at:
    // https://code.google.com/p/google-api-java-client/wiki/Setup
    // Add the Google API client library.
    compile('com.google.api-client:google-api-client:1.18.0-rc') {
        // Exclude artifacts that the Android SDK/Runtime provides.
        exclude(group: 'xpp3', module: 'xpp3')
        exclude(group: 'org.apache.httpcomponents', module: 'httpclient')
        exclude(group: 'junit', module: 'junit')
        exclude(group: 'com.google.android', module: 'android')
    }
    // Add the Android extensions for the Google API client library.
    // This will automatically include play services as long as you have download that library
    // from the Android SDK manager.
    // Add the Android extensions for the Google API client library.
    compile('com.google.api-client:google-api-client-android:1.18.0-rc') {
        // Exclude play services, since we're not using this yet.
        exclude(group: 'com.google.android.gms:play-services', module: 'google-play-services')
    }
    // END Google APIs
    // The following client libraries make HTTP/JSON on Android easier.
    // Android extensions for Google HTTP Client.
    compile('com.google.http-client:google-http-client-android:1.18.0-rc') {
        exclude(group: 'com.google.android', module: 'android')
    }
    // This is used by the Google HTTP client library.
    // compile(group: 'com.google.guava', name: 'guava', version: '18.0.+')
    compile 'com.google.maps.android:android-maps-utils:0.4'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.2@aar') {
        transitive = true;
    }
    compile 'com.android.support:multidex:1.0.0'
}
